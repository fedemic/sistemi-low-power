# Reading C:/altera/11.0sp1/modelsim_ase/tcl/vsim/pref.tcl 
# do Artificial_Neuron_run_msim_gate_vhdl.do 
# if {[file exists gate_work]} {
# 	vdel -lib gate_work -all
# }
# vlib gate_work
# vmap work gate_work
# Copying c:\altera\11.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied c:\altera\11.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vcom -93 -work work {Artificial_Neuron.vho}
# Model Technology ModelSim ALTERA vcom 6.6d Compiler 2010.11 Nov  2 2010
# -- Loading package standard
# -- Loading package std_logic_1164
# -- Loading package vital_timing
# -- Loading package vital_primitives
# -- Loading package cycloneii_atom_pack
# -- Loading package cycloneii_components
# -- Loading package numeric_std
# -- Compiling entity artificial_neuron
# -- Compiling architecture structure of artificial_neuron
# 
vsim work.artificial_neuron(structure)
# vsim work.artificial_neuron(structure) 
# Loading std.standard
# Loading ieee.std_logic_1164(body)
# Loading std.textio(body)
# Loading ieee.vital_timing(body)
# Loading ieee.vital_primitives(body)
# Loading cycloneii.cycloneii_atom_pack(body)
# Loading cycloneii.cycloneii_components
# Loading ieee.numeric_std(body)
# Loading work.artificial_neuron(structure)
# Loading cycloneii.cycloneii_lcell_ff(vital_lcell_ff)
# Loading cycloneii.cycloneii_and1(altvital)
# Loading cycloneii.cycloneii_lcell_comb(vital_lcell_comb)
# Loading ieee.std_logic_arith(body)
# Loading cycloneii.cycloneii_io(structure)
# Loading cycloneii.cycloneii_mux21(altvital)
# Loading cycloneii.cycloneii_dffe(behave)
# Loading cycloneii.cycloneii_asynch_io(behave)
# Loading cycloneii.cycloneii_clkctrl(vital_clkctrl)
# Loading cycloneii.cycloneii_ena_reg(behave)
# Loading cycloneii.cycloneii_ram_block(block_arch)
# Loading cycloneii.cycloneii_ram_register(reg_arch)
# Loading cycloneii.cycloneii_ram_pulse_generator(pgen_arch)
add wave \
{sim:/artificial_neuron/done } \
{sim:/artificial_neuron/output } \
{sim:/artificial_neuron/clk } \
{sim:/artificial_neuron/start } \
{sim:/artificial_neuron/rst_n } 
force -freeze sim:/artificial_neuron/clk 1 0, 0 {500000000000 ps} -r {1 sec}
force -freeze sim:/artificial_neuron/start 0 0
force -freeze sim:/artificial_neuron/rst_n 0 0
run 10 sec
force -freeze sim:/artificial_neuron/ext_data 01111111 0
run 50 sec
force -freeze sim:/artificial_neuron/rst_n 1 0
run 20 sec
force -freeze sim:/artificial_neuron/start 1 0
run 10000 sec
force -freeze sim:/artificial_neuron/start 0 0
run 50 sec
run 250 sec
force -freeze sim:/artificial_neuron/ext_data 00000000 0
force -freeze sim:/artificial_neuron/start 1 0
run 10000 sec
force -freeze sim:/artificial_neuron/ext_data 10000000 0
force -freeze sim:/artificial_neuron/start 0 0
run 200 sec
force -freeze sim:/artificial_neuron/start 1 0
run 10000 sec
force -freeze sim:/artificial_neuron/start 0 0
run 50 sec
force -freeze sim:/artificial_neuron/ext_data 00000011 0
force -freeze sim:/artificial_neuron/start 1 0
run 2 sec
force -freeze sim:/artificial_neuron/ext_data 10000011 0
run 10000 sec
force -freeze sim:/artificial_neuron/start 0 0
run 5 sec
force -freeze sim:/artificial_neuron/ext_data 00000011 0
force -freeze sim:/artificial_neuron/start 1 0
run 2 sec
force -freeze sim:/artificial_neuron/ext_data 00000001 0
run 1 sec
force -freeze sim:/artificial_neuron/ext_data 10000011 0
run 10000 sec
